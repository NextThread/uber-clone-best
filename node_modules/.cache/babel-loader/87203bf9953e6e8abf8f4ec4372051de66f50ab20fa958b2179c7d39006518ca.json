{"ast":null,"code":"var _jsxFileName = \"/Users/binarybeast/uber-clone/src/Pages/pick/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useMediaPredicate } from 'react-media-hook';\nimport axios from \"axios\";\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport { mapStyle } from \"../../Component/map/mapStyle\";\nimport { GOOGLE_API_KEY } from \"../../Component/const/api\";\nimport InfoComponent from \"../../Component/map/infoComponent\";\nimport { updatePickup, updatePickupDisable, updatePickupCoordinates } from \"../../Store/slice\";\nimport { useAppDispatch, useAppSelector } from \"../../Store/hooks\";\nimport FormCard from \"../../Component/formCard\";\nimport Header from \"../../Component/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pick = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    origin\n  } = useParams();\n  const myOrigin = origin.split(\",\")[0];\n  const pickUpCoordinate = useAppSelector(state => state.root.pickup.coordinates);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: `${GOOGLE_API_KEY}`\n  });\n  useEffect(() => {\n    let mount = true;\n    if (mount) {\n      dispatch(updatePickup(myOrigin));\n      dispatch(updatePickupDisable(true));\n      const getCoordinate = address => {\n        axios(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${GOOGLE_API_KEY}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(async res => {\n          try {\n            const result = await res.data;\n            const position = await result.results[0].geometry.location;\n            dispatch(updatePickupCoordinates(position));\n          } catch (error) {\n            console.log(error);\n          }\n        });\n      };\n      getCoordinate(origin);\n    }\n    return () => {\n      dispatch(updatePickup(\"\"));\n      dispatch(updatePickupDisable(false));\n      mount = false;\n    };\n  }, [dispatch, origin, myOrigin]);\n  const biggerScreen = useMediaPredicate('(min-width: 640px)');\n  const {\n    lat,\n    lng\n  } = pickUpCoordinate;\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` bg-gray-300  h-[45vh] sm:h-screen w-full`,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"map\",\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        center: pickUpCoordinate,\n        zoom: 14,\n        options: {\n          streetViewControl: false,\n          fullscreenControl: false,\n          mapTypeControl: false,\n          styles: mapStyle,\n          clickableIcons: false,\n          zoomControl: biggerScreen ? true : false\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          clickable: false,\n          position: pickUpCoordinate,\n          options: {\n            icon: {\n              url: 'https://www.picng.com/upload/vinyl/png_vinyl_35563.png',\n              scaledSize: new google.maps.Size(18, 18)\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoComponent, {\n          center: pickUpCoordinate,\n          place: `From ${myOrigin}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: lat - 0.0015,\n            lng: lng - 0.0015\n          },\n          options: {\n            icon: {\n              // url: 'https://www.uttf.com.ua/assets/images/loader2.gif',\n              // url: 'https://github.com/EfficientProgramming01/uberClone/blob/master/assets/carMarker.png?raw=true',\n              url: 'https://d1a3f4spazzrp4.cloudfront.net/car-types/map70px/product/map-uberx.png',\n              scaledSize: new google.maps.Size(25, 25)\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n      heading: \"Where to?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Pick, \"riyqBeXfe4N2mIdKj1HS89j8ZgA=\", false, function () {\n  return [useAppDispatch, useParams, useAppSelector, useJsApiLoader, useMediaPredicate];\n});\n_c = Pick;\nexport default Pick;\nvar _c;\n$RefreshReg$(_c, \"Pick\");","map":{"version":3,"names":["React","useEffect","useParams","useMediaPredicate","axios","GoogleMap","useJsApiLoader","Marker","mapStyle","GOOGLE_API_KEY","InfoComponent","updatePickup","updatePickupDisable","updatePickupCoordinates","useAppDispatch","useAppSelector","FormCard","Header","jsxDEV","_jsxDEV","Pick","_s","dispatch","origin","myOrigin","split","pickUpCoordinate","state","root","pickup","coordinates","isLoaded","googleMapsApiKey","mount","getCoordinate","address","method","headers","then","res","result","data","position","results","geometry","location","error","console","log","biggerScreen","lat","lng","fileName","_jsxFileName","lineNumber","columnNumber","children","className","id","mapContainerStyle","width","height","center","zoom","options","streetViewControl","fullscreenControl","mapTypeControl","styles","clickableIcons","zoomControl","clickable","icon","url","scaledSize","google","maps","Size","place","heading","_c","$RefreshReg$"],"sources":["/Users/binarybeast/uber-clone/src/Pages/pick/index.tsx"],"sourcesContent":["import React,{useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport  {useMediaPredicate} from 'react-media-hook';\nimport axios from \"axios\";\nimport  { GoogleMap, useJsApiLoader, Marker} from '@react-google-maps/api';\nimport { mapStyle } from \"../../Component/map/mapStyle\";\nimport { GOOGLE_API_KEY } from \"../../Component/const/api\";\nimport InfoComponent from \"../../Component/map/infoComponent\";\nimport { updatePickup, updatePickupDisable, updatePickupCoordinates } from \"../../Store/slice\";\nimport { useAppDispatch, useAppSelector } from \"../../Store/hooks\";\nimport FormCard from \"../../Component/formCard\";\nimport Header from \"../../Component/header\";\n\n\nconst Pick = () => {\n const dispatch = useAppDispatch();\n const {origin} = useParams();\n const myOrigin = origin.split(\",\")[0];\n const pickUpCoordinate = useAppSelector(state => state.root.pickup.coordinates);\n\n const { isLoaded} = useJsApiLoader({\n  googleMapsApiKey: `${GOOGLE_API_KEY}`\n}) \n\n\n  useEffect(() => {\n    let mount = true;\n    if(mount){\n      dispatch(updatePickup(myOrigin));\n      dispatch(updatePickupDisable(true));\n      const  getCoordinate = (address:string,) => {\n        axios(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${GOOGLE_API_KEY}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(async res => {\n          try {\n            const result = await res.data;\n          const position =  await result.results[0].geometry.location;   \n           dispatch(updatePickupCoordinates(position));\n          }\n          catch (error) {\n            console.log(error);\n          }\n        })\n      }\n      getCoordinate(origin);\n    }\n    return () => {\n      dispatch(updatePickup(\"\"));\n      dispatch(updatePickupDisable(false));\n      mount = false;  \n    }\n  }, [ dispatch,  origin, myOrigin])\n\n  const  biggerScreen = useMediaPredicate('(min-width: 640px)');\n\n  const {lat, lng} = pickUpCoordinate;\n\n  if(!isLoaded) {\n    return <div>\n    </div>\n  }\n  \n  return (\n    <div>\n      <Header/>\n      <div className={` bg-gray-300  h-[45vh] sm:h-screen w-full`}>\n        <GoogleMap\n          id='map'\n          mapContainerStyle={{width: '100%', height: '100%'}}\n          center={pickUpCoordinate}\n          zoom={14}\n          options = {{\n            streetViewControl: false,\n            fullscreenControl: false,\n            mapTypeControl: false,\n            styles: mapStyle,\n            clickableIcons: false,\n            zoomControl: biggerScreen? true: false,\n          }}>  \n          <Marker\n            clickable={false}\n            position={pickUpCoordinate}\n            options  = {{\n              icon: {\n                url: 'https://www.picng.com/upload/vinyl/png_vinyl_35563.png',\n                scaledSize: new google.maps.Size(18, 18), \n              },  \n            }}\n          />\n          <InfoComponent\n            center = {pickUpCoordinate}\n            place  = {`From ${myOrigin}`}\n          />\n          <Marker   \n            position={\n              {\n                lat: lat - 0.0015,\n                lng: lng - 0.0015\n              }\n\n            }\n              options = {{\n                icon: {\n                  // url: 'https://www.uttf.com.ua/assets/images/loader2.gif',\n                  // url: 'https://github.com/EfficientProgramming01/uberClone/blob/master/assets/carMarker.png?raw=true',\n                  url: 'https://d1a3f4spazzrp4.cloudfront.net/car-types/map70px/product/map-uberx.png',\n                  scaledSize: new google.maps.Size(25, 25), \n                }  \n              }}\n            />\n          </GoogleMap>\n        </div>\n      <FormCard\n        heading=\"Where to?\"\n      />\n    </div>\n  )\n}\n\nexport default Pick;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}