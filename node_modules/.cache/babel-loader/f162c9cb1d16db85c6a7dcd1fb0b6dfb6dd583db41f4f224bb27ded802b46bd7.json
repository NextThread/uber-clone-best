{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  errorMessage: \"Route not found. Select an alternative  location route and try again...\",\n  mapInitialPosition: {\n    lat: 6.5224,\n    lng: 3.3792\n  },\n  pickup: {\n    value: '',\n    disabled: false,\n    coordinates: {\n      lat: 0,\n      lng: 0\n    }\n  },\n  destination: {\n    value: '',\n    disabled: false,\n    coordinates: {\n      lat: 0,\n      lng: 0\n    }\n  }\n};\nexport const slice = createSlice({\n  name: 'slice',\n  initialState,\n  reducers: {\n    updateErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n    updateInitialPosition: (state, action) => {\n      state.mapInitialPosition = action.payload;\n    },\n    updatePickup: (state, action) => {\n      state.pickup.value = action.payload;\n    },\n    updateDestination: (state, action) => {\n      state.destination.value = action.payload;\n    },\n    updatePickupDisable: (state, action) => {\n      state.pickup.disabled = action.payload;\n    },\n    updateDestinationDisable: (state, action) => {\n      state.destination.disabled = action.payload;\n    },\n    updatePickupCoordinates: (state, action) => {\n      state.pickup.coordinates = action.payload;\n    },\n    updateDestinationCoordinates: (state, action) => {\n      state.destination.coordinates = action.payload;\n    }\n  }\n});\nexport const {\n  updateErrorMessage,\n  updateInitialPosition,\n  updatePickup,\n  updateDestination,\n  updatePickupDisable,\n  updateDestinationDisable,\n  updatePickupCoordinates,\n  updateDestinationCoordinates\n} = slice.actions;\nexport default slice.reducer;","map":{"version":3,"names":["createSlice","initialState","errorMessage","mapInitialPosition","lat","lng","pickup","value","disabled","coordinates","destination","slice","name","reducers","updateErrorMessage","state","action","payload","updateInitialPosition","updatePickup","updateDestination","updatePickupDisable","updateDestinationDisable","updatePickupCoordinates","updateDestinationCoordinates","actions","reducer"],"sources":["/Users/binarybeast/uber-clone/src/Store/slice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n\nexport interface Props {\n  errorMessage: string;\n  mapInitialPosition: {\n    lat: number;\n    lng: number;\n  },\n  pickup: {\n    value: string;\n    disabled: boolean;\n    coordinates: {\n      lat: number;\n      lng: number;\n    }\n  },\n  destination:{\n    value: string;\n    disabled: boolean;\n    coordinates: {\n      lat: number;\n      lng: number;\n    }\n  }\n}\n\nconst initialState:Props = {\n   errorMessage: \"Route not found. Select an alternative  location route and try again...\",\n    mapInitialPosition: {\n      lat: 6.5224,\n      lng: 3.3792\n    },\n    pickup: {\n      value: '',\n      disabled: false,\n      coordinates: {\n        lat: 0,\n        lng: 0\n      }\n      \n    },\n    destination: {\n      value: '',\n      disabled: false,\n      coordinates: {\n        lat: 0,\n        lng: 0\n      }\n    }\n\n    \n}\n\nexport const slice = createSlice ({\n    name: 'slice',\n    initialState,\n    reducers: {\n      updateErrorMessage: (state, action: PayloadAction<string>) => {\n        state.errorMessage = action.payload;\n      },\n      updateInitialPosition: (state, action:  PayloadAction<{lat: number, lng: number}>) => {\n        state.mapInitialPosition = action.payload;\n      },\n      updatePickup: (state, action: PayloadAction<string>) => {\n        state.pickup.value = action.payload;\n      }, \n      updateDestination: (state, action: PayloadAction<string>) => {\n        state.destination.value = action.payload;\n      },\n      updatePickupDisable: (state, action: PayloadAction<boolean>) => { \n        state.pickup.disabled = action.payload;\n      },\n      updateDestinationDisable: (state, action: PayloadAction<boolean>) => {\n        state.destination.disabled = action.payload;\n      },\n      updatePickupCoordinates: (state, action: PayloadAction<{lat: number, lng: number}>) => {\n        state.pickup.coordinates = action.payload;\n      },\n      updateDestinationCoordinates: (state, action: PayloadAction<{lat: number, lng: number}>) => {\n        state.destination.coordinates = action.payload;\n      }\n    }\n})\n\n\nexport const {updateErrorMessage, updateInitialPosition, updatePickup, updateDestination, updatePickupDisable, updateDestinationDisable, updatePickupCoordinates, updateDestinationCoordinates} = slice.actions;\n\nexport default slice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AA2B7D,MAAMC,YAAkB,GAAG;EACxBC,YAAY,EAAE,yEAAyE;EACtFC,kBAAkB,EAAE;IAClBC,GAAG,EAAE,MAAM;IACXC,GAAG,EAAE;EACP,CAAC;EACDC,MAAM,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE;MACXL,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;IACP;EAEF,CAAC;EACDK,WAAW,EAAE;IACXH,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE;MACXL,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE;IACP;EACF;AAGJ,CAAC;AAED,OAAO,MAAMM,KAAK,GAAGX,WAAW,CAAE;EAC9BY,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,QAAQ,EAAE;IACRC,kBAAkB,EAAEA,CAACC,KAAK,EAAEC,MAA6B,KAAK;MAC5DD,KAAK,CAACb,YAAY,GAAGc,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,qBAAqB,EAAEA,CAACH,KAAK,EAAEC,MAAkD,KAAK;MACpFD,KAAK,CAACZ,kBAAkB,GAAGa,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDE,YAAY,EAAEA,CAACJ,KAAK,EAAEC,MAA6B,KAAK;MACtDD,KAAK,CAACT,MAAM,CAACC,KAAK,GAAGS,MAAM,CAACC,OAAO;IACrC,CAAC;IACDG,iBAAiB,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MAC3DD,KAAK,CAACL,WAAW,CAACH,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC1C,CAAC;IACDI,mBAAmB,EAAEA,CAACN,KAAK,EAAEC,MAA8B,KAAK;MAC9DD,KAAK,CAACT,MAAM,CAACE,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACxC,CAAC;IACDK,wBAAwB,EAAEA,CAACP,KAAK,EAAEC,MAA8B,KAAK;MACnED,KAAK,CAACL,WAAW,CAACF,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IAC7C,CAAC;IACDM,uBAAuB,EAAEA,CAACR,KAAK,EAAEC,MAAiD,KAAK;MACrFD,KAAK,CAACT,MAAM,CAACG,WAAW,GAAGO,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDO,4BAA4B,EAAEA,CAACT,KAAK,EAAEC,MAAiD,KAAK;MAC1FD,KAAK,CAACL,WAAW,CAACD,WAAW,GAAGO,MAAM,CAACC,OAAO;IAChD;EACF;AACJ,CAAC,CAAC;AAGF,OAAO,MAAM;EAACH,kBAAkB;EAAEI,qBAAqB;EAAEC,YAAY;EAAEC,iBAAiB;EAAEC,mBAAmB;EAAEC,wBAAwB;EAAEC,uBAAuB;EAAEC;AAA4B,CAAC,GAAGb,KAAK,CAACc,OAAO;AAE/M,eAAed,KAAK,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}